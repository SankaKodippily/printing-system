range PAGES = 0..3

set PRINT_ACTIONS = {student.acquire, technician.acquire, print, refill, release}

// Printer Process
PRINTER(PAGES = 3) = PRINTER_FREE,
PRINTER_FREE = PRINTER_IN_USE[PAGES],
PRINTER_IN_USE[p: 0..PAGES] = ( when(p > 0) student.acquire -> print -> release -> PRINTER_IN_USE[p-1] | when(p == 0) technician.acquire -> refill -> release -> PRINTER_FREE ).

//(pages_left[x:PAGES] -> if (x > 0) then (print -> release -> PRINTER_FREE | release -> PRINTER_FREE) else (refill -> release -> PRINTER_FREE | release -> PRINTER_FREE)).

// Student Process
STUDENT (DOCS = 1) = (student.acquire -> PRINT[1]),
PRINT[i: 1..DOCS] = ( print -> if (i < DOCS) then (release -> student.acquire -> PRINT[i+1]) else (release -> END) ) + PRINT_ACTIONS.

// Technician Process
TECHNICIAN = (technician.acquire -> REFILL),
REFILL = (refill -> release -> TECHNICIAN) + PRINT_ACTIONS.

// Mutually Exclusive Printing System
|| PRINTING_SYSTEM = ({s1, s2, t} :: PRINTER(3) || s1: STUDENT(2) || s2: STUDENT(3) || t: TECHNICIAN).
