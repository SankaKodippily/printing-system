const MIN_PAGES = 0
const MAX_PAGES = 3

set PRINT_ACTIONS = {student.acquire, technician.acquire, print, refill, release}

// Printer Process
PRINTER(PAGES = MAX_PAGES) = PRINT_OR_REFILL[PAGES],
PRINT_OR_REFILL[p: MIN_PAGES..MAX_PAGES] = ( when(p > 0) student.acquire -> print -> release -> PRINT_OR_REFILL[p-1] | when(p == 0) technician.acquire -> refill -> release -> PRINTER ).

// Student Process
STUDENT (DOCS = 1) = (student.acquire -> PRINT[1]),
PRINT[i: 1..DOCS] = ( print -> if (i < DOCS) then (release -> student.acquire -> PRINT[i+1]) else (release -> END) ) + PRINT_ACTIONS.

// Technician Process
TECHNICIAN = (technician.acquire -> REFILL),
REFILL = (refill -> release -> TECHNICIAN) + PRINT_ACTIONS.

// Mutually Exclusive Printing System
|| PRINTING_SYSTEM = ({s1, s2, t} :: PRINTER(3) || s1: STUDENT(2) || s2: STUDENT(3) || t: TECHNICIAN).
